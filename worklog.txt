I am starting to work through Ray Tracing in One Weekend.


RTIOW: 1. Overview
Ray tracing: a path tracer.
Final Outcome: a ray tracer that produces some great images.
Why C++: fast, portable, and most production movie and video game renderers are written in C++.


RTIOW: 2.1 The PPM Image Format
Way to see an image: write it to a file.
For plain text ppm file, some Notes in C++:
First, pixels: write from left to right
Second, rows: write from top to bottom
Third, each of components range: high dynamic


RTIOW: 2.2 Creating an Image File
We need to redirect it to an image file. (because the file is written to the program output) -- Use > (which is a redirection operator)
For Mac/Linux: build/inOneWeekend > image.ppm
For Windows: build\Release\inOneWeekend.exe > image.ppm
On Mac, using ToyViewer to open the output file (or Google "ppm viewer")


RTIOW: 2.3 Adding a Progress Indicator
Advantages: track the progress of a long render; identify a run that's stalled out due to an infinite loop or other problem.
image -- std::cout
error -- std::cerr


RTIOW: 3. The vec3 Class
Almost all graphics programs -- some classes for storing geometric vectors and colors.
Vectors are 4D: 3D+a homogeneous coordinate for geometry & RGB+an alpha transparency channels for colors.
We use the same class vec3 for colors, locations, directions, offsets, etc.
Two aliases for vec3: point2 and color.


RTIOW: 3.1 Variables and Methods
vec3 class: public
default conductor, conductor, assignment operators
We use double (but some ray tracers use float, both ok)
//Type aliases for vec3
using point3 = vec3; // 3D point
using color = vec3; // RGB color


RTIOW: 3.2 vec3 Utility Functions
inline -- in header file -- functions are not complex
inline function: change parameters:
E.g.:
inline vec3 operator*(const vec3 &u, const vec3 &v)
inline vec3 operator*(double t, const vec3 &v)
inline vec3 operator*(const vec3 &v, double t)


RTIOW: 3.3 Color Utility Functions
Using vec3 class, create a utility function to write a single pixel's color out to the standard output stream.
Then update main file by using vec3.h and color.h



